<UserControl x:Class="JannesP.DeviceSimConnectBridge.WpfApp.View.Controls.LoadingIndicator"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:JannesP.DeviceSimConnectBridge.WpfApp.View.Controls"
             mc:Ignorable="d"
             d:DesignHeight="100" d:DesignWidth="100">
    <UserControl.Resources>
        <Style x:Key="LoadingIndicatorAnimationStyle" TargetType="Control">
            <Setter Property="Foreground" Value="Azure" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Control">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="StoryBoardResource" SpeedRatio="1">
                                <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
                                                                               Storyboard.TargetName="PART_Canvas0"
                                                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:3.000" Value="360" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
                                                                               Storyboard.TargetName="PART_Canvas1"
                                                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.000" Value="0" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:2.000" Value="-360" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">

                            <Border.Resources>
                                <Style TargetType="{x:Type Canvas}">
                                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform />
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Border.Resources>

                            <Grid Background="Transparent">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                                        <TranslateTransform X="10" Y="10" />
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Canvas x:Name="PART_Canvas0" Opacity="1.0">
                                    <Path Stroke="{TemplateBinding Foreground}" StrokeThickness="10">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathGeometry.Transform>
                                                    <TranslateTransform X="20" Y="-20" />
                                                </PathGeometry.Transform>
                                                <PathGeometry.Figures>
                                                    <PathFigureCollection>
                                                        <PathFigure StartPoint="0,0">
                                                            <PathFigure.Segments>
                                                                <PathSegmentCollection>
                                                                    <ArcSegment Size="40,40" IsLargeArc="True"
                                                                                    SweepDirection="CounterClockwise"
                                                                                    Point="40,40" />
                                                                </PathSegmentCollection>
                                                            </PathFigure.Segments>
                                                        </PathFigure>
                                                    </PathFigureCollection>
                                                </PathGeometry.Figures>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </Canvas>

                                <Canvas x:Name="PART_Canvas1" Opacity="0.3">
                                    <Path Stroke="{TemplateBinding Foreground}" StrokeThickness="10">
                                        <Path.Data>
                                            <PathGeometry>
                                                <PathGeometry.Transform>
                                                    <TranslateTransform X="-7" Y="7" />
                                                </PathGeometry.Transform>
                                                <PathGeometry.Figures>
                                                    <PathFigureCollection>
                                                        <PathFigure StartPoint="0,0">
                                                            <PathFigure.Segments>
                                                                <PathSegmentCollection>
                                                                    <ArcSegment Size="30,30" IsLargeArc="True"
                                                                                    SweepDirection="Clockwise"
                                                                                    Point="40,40" />
                                                                </PathSegmentCollection>
                                                            </PathFigure.Segments>
                                                        </PathFigure>
                                                    </PathFigureCollection>
                                                </PathGeometry.Figures>
                                            </PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </Canvas>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsVisible" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource StoryBoardResource}" x:Name="Storyboard0" />
                                </Trigger.EnterActions>

                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="Storyboard0" />
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Control Style="{StaticResource LoadingIndicatorAnimationStyle}" />
</UserControl>